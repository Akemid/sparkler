{"version":3,"sources":["utils/constants.js","actions/index.js","reducers/types.js","components/sidebar/GenerateModel.js","components/dialogs/SeedURLDialog.js","components/sidebar/CreateSeed.js","components/sidebar/StartCrawl.js","components/IFrameFrame.js","components/Previews.js","views/Home.js","components/Banana.js","views/BananaFrame.js","views/Main.js","components/panels/ListModels.js","components/panels/NewModel.js","components/dialogs/ModelDialog.js","components/Navbar.js","App.js","reducers/test.js","reducers/search.js","reducers/model.js","reducers/index.js","index.js"],"names":["dotenv","config","fetchAllModels","dispatch","axios","get","env","then","response","type","payload","data","fetchNewTime","Date","toString","searchFired","b","relevancy","page1-ann","page2-ann","page3-ann","page4-ann","page5-ann","page6-ann","page7-ann","page8-ann","page9-ann","page10-ann","page11-ann","page12-ann","GenerateModel","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","INTENT_PRIMARY","handleChange","bind","assertThisInitialized","generateUpdateModel","prevProps","model_stats","alert","updateModel","current_model","annotations","event","setState","searchterm","target","value","searchTriggered","searchWebsites","_this2","react_default","a","createElement","html","formGroup","id","contentClassName","helperText","intent","label","labelFor","inputGroup","onChange","leftIcon","placeholder","buttons","disabled","onClick","handleSearch","style","textAlign","className","icon","iconSize","Icon","SIZE_LARGE","updateTime","Component","connect","modelreducer","updated_relevancy","m","s","model","search_term","jdata","catch","error","name","post","SeedURLDialog","handleClose","isOpen","handleOpen","handleOkay","prevState","snapshot","seed_urls","saveSeedURLs","dialog","assign","onClose","title","Classes","DIALOG_BODY","minHeight","textArea","growVertically","large","Intent","PRIMARY","fill","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","tooltip","content","urls","forwardRef","CreateSeed","modalElement","current","open","React","createRef","text","dialogs_SeedURLDialog","ref","StartCrawl","handleClick","startCrawl","IFrameFrame","updaterelevancy","val","setRelevancy","iframe","url","skeleton","card","height","interactive","elevation","Elevation","TWO","build","fluid","sm","SKELETON","marginTop","scrolling","width","searchreducer","running","v","frame","console","log","Previews","arr","matrix","listToMatrix","websites","i","length","push","components_IFrameFrame","pos","obj","render_nowebsites","undefined","render_websites","list","elementsPerSubArray","k","Home","sidebar_GenerateModel","divider","sidebar_CreateSeed","sidebar_StartCrawl","components_Previews","Banana","components_Banana","Main","react_router_dom","basename","react_router","exact","path","component","BananaFrame","ListModels","handleSelect","enableModel","models","map","item","key","serializedState","JSON","stringify","localStorage","setItem","_unused","NewModel","handleSubmit","e","createNewModel","cjs","ModelDialog","oldProps","newProps","tabs","tab","panel","panels_NewModel","panels_ListModels","Navbar","handle_models","margin","dialogs_ModelDialog","currentTime","timereducer","App","components_Navbar","views_Main","initialState","rootReducer","arguments","action","objectSpread","searchReducer","modelReducer","crawl","combineReducers","store","enhancer","compose","applyMiddleware","thunk","createStore","reducers","configureStore","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0339b4fb.chunk.js","sourcesContent":["import dotenv from 'dotenv';\nimport 'location-origin';\n\ndotenv.config();\n\nexport const ROUTER_BASENAME = process.env.REACT_APP_ROUTER_BASENAME;\n\nexport const API_URL = process.env.REACT_APP_API_URL","import * as types from '../reducers/types';\nimport * as env from '../utils/constants'\nimport axios from 'axios';\n//var Database = require('arangojs').Database;\n\n//var db = new Database('http://127.0.0.1:8529');\n/*\ndb.createDatabase('sce').then(\n    () => console.log('Database created'),\n    err => console.error('Failed to create database:', err)\n);*/\n\n//db.useDatabase('sce');\n\n//let collection = db.collection('models');\n\n/*\n\ncollection.create().then(\n    () => console.log('Collection created'),\n    err => console.error('Failed to create collection:', err)\n);\n*/\n\n\n/*let doc = {\n    _key: 'firstDocument',\n    a: 'foo',\n    b: 'bar',\n    c: Date()\n};\n\n\ncollection.save(doc).then(\n    meta => console.log('Document saved:', meta._rev),\n    err => console.error('Failed to save document:', err)\n);\n\n\ncollection.update('firstDocument', {d: 'qux'}).then(\n    meta => console.log('Document updated:', meta._rev),\n    err => console.error('Failed to update document:', err)\n);\n\n\ncollection.document('firstDocument').then(\n    doc => console.log('Document:', JSON.stringify(doc, null, 2)),\n    err => console.error('Failed to fetch document:', err)\n);*/\n\nexport const createNewModel = (name) => {\n    return (dispatch) => {\n        axios.get(env.API_URL+\"/explorer-api/classify/createnew/\"+name)\n            .then(response => {\n                response = {\n                    type: types.NEW_MODEL,\n                    payload: name\n                }\n                dispatch(response)\n            })\n    }\n}\n\nexport const updateModel = (name, annotations) => {\n    return (dispatch) => {\n        axios.post(env.API_URL+\"/explorer-api/classify/update/\"+name, annotations)\n            .then(response => {\n                response = {\n                    type: types.MODEL_STATS,\n                    payload: response.data\n                }\n                debugger;\n                dispatch(response)\n            })\n    }\n}\nexport const fetchAllModels = () => {\n    return (dispatch) => {\n        axios.get(env.API_URL+\"/explorer-api/classify/listmodels\")\n            .then(response => {\n                response = {\n                    type: types.MODEL_LIST,\n                    payload: response.data\n                }\n                dispatch(response)\n            })\n    }\n}\n\nexport const enableModel = (name) => {\n    return (dispatch) => {\n        try {\n            const serializedState = JSON.stringify({current_model: name});\n            localStorage.setItem('state', serializedState);\n        } catch {\n            // ignore write errors\n        }\n        let response = {\n            type: types.ENABLE_MODEL,\n            payload: name\n\n        };\n        dispatch(response)\n    }\n}\nexport const fetchNewTime = () => ({\n    type: types.FETCH_NEW_TIME,\n    payload: new Date().toString(),\n})\n\n\nexport const searchFired = (b) => ({\n    type: types.SEARCH_FIRED,\n    payload: b\n})\n\nexport const searchWebsites = (model, search_term) => {\n    return (dispatch) => {\n        axios.get(env.API_URL+\"/search/\"+model+\"/\" + search_term)\n            .then(response => {\n                let jdata = response.data;\n\n                response = {\n                    type: types.SEARCH_RESULTS,\n                    payload: jdata\n                };\n                dispatch(response)\n            }).then(response => {\n                dispatch(searchFired(false))\n            })\n            .catch(error => {\n                throw(error);\n            })\n\n    }\n};\n\nexport const saveSeedURLs = (model,urls) => {\n\n    return (dispatch) => {\n        axios.post(env.API_URL+'/explorer-api/cmd/seed/upload/'+model, urls)\n            .then(response => {\n                response = {\n                    type: types.UPDATE_SEED_URLS,\n                    payload: urls\n\n                }\n                dispatch(response)\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n\n};\n\nexport const modelStats = (model) => {\n    return (dispatch) => {\n        axios.get(env.API_URL+'/explorer-api/classify/stats/'+model)\n            .then(response => {\n                response = {\n                    type: types.MODEL_STATS,\n                    payload: response.data\n                }\n\n                dispatch(response)\n            })\n    }\n}\n\nlet relevancy = {\"page1-ann\":0,\"page2-ann\":0,\"page3-ann\":0,\"page4-ann\":0,\"page5-ann\":0,\"page6-ann\":0,\"page7-ann\":0,\"page8-ann\":0,\"page9-ann\":0,\"page10-ann\":0,\"page11-ann\":0,\"page12-ann\":0,};\nexport const setRelevancy = (frame, val) => {\n    return (dispatch) => {\n        relevancy[frame] = val;\n        console.log(relevancy);\n        let response = {\n            type: types.UPDATED_RELEVANCY,\n            payload: relevancy\n        }\n        dispatch(response)\n    }\n}\n\n\nexport const startCrawl = (model) => {\n    return (dispatch) => {\n        axios.post(env.API_URL+'/explorer-api/cmd/crawler/crawl/'+model)\n            .then( response => {\n                response = {\n                    type: types.CRAWL_STARTED,\n                    payload: model\n                }\n                }\n            )\n    }\n}\n/*\nexport const login = (user) => ({\n    type: types.LOGIN,\n    payload: user\n})\n\nexport const logout = () => ({\n    type: types.LOGOUT,\n})*/\n","export const FETCH_NEW_TIME = 'FETCH_NEW_TIME';\nexport const SEARCH_RESULTS = 'SEARCH_RESULTS';\nexport const SEARCH_FIRED = 'SEARCH_FIRED';\nexport const NEW_MODEL = 'NEW_MODEL';\nexport const MODEL_LIST = 'MODEL_LIST';\nexport const ENABLE_MODEL = 'ENABLE_MODEL';\nexport const UPDATED_RELEVANCY = 'UPDATED_RELEVANCY';\nexport const UPDATE_SEED_URLS = 'UPDATE_SEED_URLS';\nexport const MODEL_STATS = 'MODEL_STATS';\nexport const CRAWL_STARTED = 'CRAWL_STARTED';","import React, {Component} from 'react';\nimport {Button, FormGroup, H5, H6, Icon, InputGroup} from \"@blueprintjs/core\";\nimport {INTENT_PRIMARY} from \"@blueprintjs/core/lib/cjs/common/classes\";\nimport {fetchNewTime, searchFired, searchWebsites, updateModel} from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nclass GenerateModel extends Component {\n\n\n    constructor(props, context) {\n        super(props, context);\n        this.state= {}\n        this.state['intent'] = INTENT_PRIMARY;\n        this.state['searchterm'] = \"\"\n        this.handleChange = this.handleChange.bind(this);\n        this.generateUpdateModel = this.generateUpdateModel.bind(this)\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.model_stats !== this.props.model_stats) {\n            alert(\"Model Updated\")\n        }\n    }\n\n    generateUpdateModel(){\n        this.props.updateModel(this.props.current_model, this.props.annotations)\n    }\n\n    handleChange(event) {\n        this.setState({searchterm: event.target.value});\n    }\n\n    handleSearch(event){\n        if(this.props.current_model) {\n            this.props.searchTriggered();\n            this.props.searchWebsites(this.props.current_model, this.state.searchterm);\n        }\n        else{\n            alert(\"Please Select a Model\")\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <H5>Generate a Model</H5>\n\n                <FormGroup id={\"searchform\"} contentClassName={\"generatemodel\"}\n                           helperText={\"Search for websites with these terms...\"}\n                           intent={this.state.intent}\n                           label={\"Search terms\"}\n                           labelFor={\"text-input\"}>\n                    <InputGroup id={\"searchterms\"} type=\"search\" value={this.state.searchterm}\n                                onChange={this.handleChange} leftIcon=\"search\" placeholder=\"Enter terms here\"\n                                intent={this.state.intent}/>\n                    <Button disabled={!this.props.current_model} onClick={() => this.handleSearch()}>Go!</Button>\n                </FormGroup>\n\n                <div>\n                    <H6>Minimum 10 Each</H6>\n                    <table style={{textAlign:\"center\"}}>\n                        <tr>\n                            <td>5</td>\n                            <td>4</td>\n                            <td>3</td>\n                        </tr>\n                        <tr>\n                            <td><button className={\"btn-circle btn-padding green\"}><Icon icon={\"heart\"} iconSize={Icon.SIZE_LARGE}/></button></td>\n                            <td><button className={\"btn-circle btn-padding amber\"}><Icon icon={\"tick\"} iconSize={Icon.SIZE_LARGE}/></button></td>\n                            <td> <button className={\"btn-circle btn-padding red\"} onClick={this.props.updateTime}><Icon icon={\"minus\"} iconSize={Icon.SIZE_LARGE}/></button></td>\n                        </tr>\n                    </table>\n\n                </div>\n                <div>\n                    <span><Button onClick={this.generateUpdateModel} disabled={!this.props.current_model} icon={\"export\"}>Update Model</Button></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateTime: () => dispatch(fetchNewTime()),\n    searchWebsites: (m,s) => dispatch(searchWebsites(m,s)),\n    searchTriggered: () => dispatch(searchFired(true)),\n    updateModel: (m ,a) => dispatch(updateModel(m, a))\n})\n\nconst mapStateToProps = state => {\n    return {\n        current_model: state.modelreducer.current_model,\n        annotations: state.modelreducer.updated_relevancy,\n        model_stats: state.modelreducer.model_stats\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenerateModel);","import React, {Component} from 'react';\nimport {Button, Classes, Dialog, Intent, TextArea, Tooltip} from \"@blueprintjs/core\";\nimport {saveSeedURLs} from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nclass SeedURLDialog extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleOkay = this.handleOkay.bind(this);\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.seed_urls !== prevProps.seed_urls){\n            this.handleClose()\n        }\n    }\n\n    handleClose = () => this.setState({isOpen: false});\n    handleOpen = () => this.setState({isOpen: true});\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleOkay() {\n        this.props.saveSeedURLs(this.props.current_model, this.state.value)\n    }\n\n\n    render() {\n        return (\n            <Dialog\n                icon=\"search-text\"\n                onClose={this.handleClose}\n                title=\"Seed URLs\"\n                {...this.state}\n            >\n                <div className={Classes.DIALOG_BODY} style={{minHeight: \"200px\"}}>\n                <TextArea style={{minHeight: \"200px\"}}\n                          growVertically={true}\n                          large={true}\n                          intent={Intent.PRIMARY}\n                          onChange={this.handleChange}\n                          value={this.state.value}\n                          fill={true}\n                />\n                </div>\n                <div className={Classes.DIALOG_FOOTER}>\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                        <Tooltip content=\"This button is hooked up to close the dialog.\">\n                            <Button onClick={this.handleClose}>Cancel</Button>\n                        </Tooltip>\n                        <Button\n                            intent={Intent.PRIMARY}\n                            onClick={this.handleOkay}\n                        >\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n        )\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    saveSeedURLs: (m,s) => dispatch(saveSeedURLs(m,s))\n})\n\nconst mapStateToProps = state => {\n    return {\n        current_model: state.modelreducer.current_model,\n        seed_urls: state.modelreducer.seed_urls\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef: true})(SeedURLDialog)","import React, { Component } from 'react';\nimport {AnchorButton, H5} from \"@blueprintjs/core\";\nimport SeedURLDialog from \"../dialogs/SeedURLDialog\";\nimport {connect} from \"react-redux\";\n\n\nclass CreateSeed extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n        this.modalElement = React.createRef();\n    }\n\n    handleOpen = () => this.modalElement.current.handleOpen();\n\n    render(){\n        return(\n            <div>\n            <H5>Create Seed File</H5>\n            <AnchorButton disabled={!this.props.current_model} icon={\"import\"} onClick={this.handleOpen} text=\"Paste Seed URLs\" />\n            <SeedURLDialog ref={this.modalElement}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        current_model: state.modelreducer.current_model\n    }\n}\n\nexport default connect(mapStateToProps)(CreateSeed)","import React, { Component } from 'react';\nimport {Button, H5} from \"@blueprintjs/core\";\nimport {connect} from \"react-redux\";\nimport {startCrawl} from \"../../actions\";\n\n\nclass StartCrawl extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n\n    handleClick = function(){\n        this.props.startCrawl(this.props.current_model)\n\n    }\n\n    render(){\n        return(\n            <div>\n                <H5>Start the Crawl</H5>\n                <Button disabled={!this.props.current_model} icon={\"time\"} text=\"Start Crawler\" onClick={this.handleClick}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        current_model: state.modelreducer.current_model\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    startCrawl: (model) => dispatch(startCrawl(model))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartCrawl)","import React, {Component} from 'react'\nimport {Button, Card, Classes, Elevation, H5} from \"@blueprintjs/core\";\nimport Iframe from \"react-iframe\";\nimport {Col, Container, Row} from \"react-grid-system\";\nimport {connect} from \"react-redux\";\nimport {setRelevancy} from \"../actions\";\n\nclass IFrameFrame extends Component{\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: \"\",\n            url: \"\",\n            skeleton: true\n\n        }\n        this.updaterelevancy = this.updaterelevancy.bind(this);\n\n    }\n\n    updaterelevancy = function(val){\n        debugger;\n        this.props.setRelevancy(this.props.iframe, val)\n    }\n\n    render() {\n        return(\n\n        <Card style={{height:\"370px\"}}  interactive={true} elevation={Elevation.TWO}>\n            <Container fluid >\n                <Row>\n                    <Col sm={12}>\n            <H5 className={this.props.skeleton ? Classes.SKELETON : ''}>Title: {this.state.title}</H5>\n            <H5 className={this.props.skeleton ? Classes.SKELETON : ''}>URL: {this.props.url}</H5>\n                    </Col>\n                </Row>\n                <Row className={this.props.skeleton ? Classes.SKELETON : ''} style={{marginTop:\"10px\", height:\"220px\"}}>\n                    <Col sm={12}>\n                        <Iframe scrolling=\"true\" url={this.props.url} width=\"100%\" height=\"200px\"/>\n                    </Col></Row>\n                <br />\n\n                <Row>\n                    <Col sm={12}>\n                        <Button onClick={() => this.updaterelevancy(2)} className={this.props.skeleton ? Classes.SKELETON : ''}>Highly Relevant</Button>\n                        <Button onClick={() => this.updaterelevancy(1)} className={this.props.skeleton ? Classes.SKELETON : ''}>Relevant</Button>\n                        <Button onClick={() => this.updaterelevancy(0)} className={this.props.skeleton ? Classes.SKELETON : ''}>Not Relevant</Button>\n                    </Col>\n                </Row>\n            </Container>\n\n        </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        skeleton: state.searchreducer.running\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setRelevancy: (a, v) => dispatch(setRelevancy(a,v))\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IFrameFrame)","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport IFrameFrame from \"./IFrameFrame\";\nimport {Col, Container, Row} from \"react-grid-system\";\n\n\nclass Previews extends Component{\n\n\n    static render_nowebsites(){\n        return(\n            <Container>\n                <Row>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                    <Col sm={4}>\n                        <IFrameFrame/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n    static listToMatrix(list, elementsPerSubArray) {\n        var matrix = [], i, k;\n\n        for (i = 0, k = -1; i < list.length; i++) {\n            if (i % elementsPerSubArray === 0) {\n                k++;\n                matrix[k] = [{pos:i+1, obj: {url:\"\", title: \"\"}}];\n            }\n\n            matrix[k].push({pos:i+1, obj: list[i]});\n        }\n\n        return matrix;\n    }\n\n//var marker = get_marker(jdata[i - 1]['label']);\n    render_websites() {\n        let arr = [];\n        let matrix  = Previews.listToMatrix(this.props.websites, 3)\n        for(let i=0; i< matrix.length; i++){\n            arr.push(<Row ><Col sm={4}><IFrameFrame iframe={\"page\"+matrix[i][1].pos+\"-ann\"} url={matrix[i][1].obj.url} title={matrix[i][1].obj.title}/></Col>\n                <Col sm={4}><IFrameFrame iframe={\"page\"+matrix[i][2].pos+\"-ann\"} url={matrix[i][2].obj.url} title={matrix[i][2].obj.title}/>\n                </Col><Col sm={4}><IFrameFrame iframe={\"page\"+matrix[i][3].pos+\"-ann\"} url={matrix[i][3].obj.url} title={matrix[i][3].obj.title}/></Col>\n            </Row>)\n        }\n        return arr;\n        }\n\n\n    render(){\n        if(this.props.running){\n            return(Previews.render_nowebsites())\n        }\n        else if(this.props.websites===undefined){\n            return(<div/>)\n        }\n        else{\n            return(this.render_websites())\n        }\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        websites: state.searchreducer.websites,\n        running: state.searchreducer.running\n\n    }\n}\n\n\nexport default connect(mapStateToProps)(Previews)","import React, { Component } from 'react';\nimport {Col, Container, Row} from \"react-grid-system\";\nimport GenerateModel from \"../components/sidebar/GenerateModel\";\nimport CreateSeed from \"../components/sidebar/CreateSeed\";\nimport StartCrawl from \"../components/sidebar/StartCrawl\";\nimport {Divider} from \"@blueprintjs/core\";\nimport Previews from \"../components/Previews\";\n\n\nclass Home extends Component {\n\n    render(){\n        return(\n            <Container fluid>\n                <Row style={{marginTop:\"10px\"}}>\n                    <Col sm={3}>\n                        <GenerateModel/>\n                        <Divider/>\n                        <CreateSeed/>\n                        <Divider/>\n                        <StartCrawl/>\n                    </Col>\n                    <Col sm={9}>\n                        <Previews/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home","import React, {Component} from 'react'\nimport Iframe from \"react-iframe\";\n\nclass Banana extends Component{\n\n    render() {\n        return (\n            <div>\n                <Iframe url=\"/banana\" width=\"100%\" height=\"100%\"/>\n            </div>\n        );\n    }\n}\n\nexport default Banana","import React, { Component } from 'react';\nimport {Col, Container, Row} from \"react-grid-system\";\nimport Banana from \"../components/Banana\";\n\nclass Home extends Component {\n\n    render(){\n        return(\n            <Container fluid>\n                <Row style={{marginTop:\"10px\"}}>\n                    <Col sm={12}>\n                        <Banana/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Home from './Home'\nimport BananaFrame from \"./BananaFrame\";\n\nclass Main extends Component {\n    render() {\n        return (\n            <div>\n                <main>\n                    <BrowserRouter basename=\"/explorer\">\n                    <Switch>\n                        <Route exact path='/' component={Home}/>\n                        <Route exact path='/analytics' component={BananaFrame}/>\n                    </Switch>\n                    </BrowserRouter>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default Main","import React, {Component} from 'react';\nimport {Card} from \"@blueprintjs/core\";\nimport {enableModel, fetchAllModels} from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nclass ListModels extends Component {\n\n    componentWillMount() {\n        this.props.fetchAllModels()\n    }\n\n    handleSelect = function(name){\n        this.props.enableModel(name)\n    }\n\n    render() {\n        if (this.props.models) {\n        return (\n            <Card>\n                {\n                    this.props.models.map((item, key) => {\n                        return <li key={key}><button onClick={() => this.handleSelect(item.name)}>{item.name}</button></li>\n                    })}\n            </Card>\n        )\n    }\n    else {\n        return (\n            <Card>No Models Available Yet</Card>\n        )\n}\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAllModels: () => dispatch(fetchAllModels()),\n    enableModel: (name) => dispatch(enableModel(name))\n\n})\n\nconst mapStateToProps = state => {\n    return {\n        models: state.modelreducer.models\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListModels)","import React, {Component} from 'react';\nimport {Button, Card, InputGroup} from \"@blueprintjs/core\";\nimport {FormGroup} from \"@blueprintjs/core/lib/cjs\";\nimport {INTENT_PRIMARY} from \"@blueprintjs/core/lib/cjs/common/classes\";\nimport {createNewModel} from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nclass NewModel extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.state['intent'] = INTENT_PRIMARY;\n        this.state['model']  = '';\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = function(e){\n        this.props.createNewModel(this.state.model)\n\n    };\n\n    handleChange = function(e){\n        this.setState({model:e.target.value})\n    };\n\n    render() {\n        return <Card>\n            <FormGroup\n                intent={this.state.intent}\n                label={\"Model Name\"}\n                labelFor={\"text-input\"}>\n                <InputGroup type=\"text\" id=\"text-input\" value={this.state.model} onChange={this.handleChange}\n                            leftIcon=\"new-text-box\" placeholder=\"Enter your model name\" intent={this.state.intent}/>\n                <Button style={{marginTop: \"10px\"}} onClick={() => this.handleSubmit()}>Create Model</Button>\n\n            </FormGroup>\n        </Card>\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    createNewModel: (s) => dispatch(createNewModel(s))\n})\n\nexport default connect(null, mapDispatchToProps)(NewModel)","import React, {Component} from 'react';\nimport {Button, Classes, Dialog, Tab, Tabs} from \"@blueprintjs/core\";\nimport ListModels from \"../panels/ListModels\";\nimport NewModel from \"../panels/NewModel\";\nimport {connect} from \"react-redux\";\n\nclass ModelDialog extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    componentDidUpdate(oldProps) {\n        const newProps = this.props\n        if(oldProps.current_model !== newProps.current_model) {\n            this.handleClose()\n        }\n    }\n\n\n    handleClose = () => this.setState({ isOpen: false });\n    handleOpen = () => this.setState({ isOpen: true });\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render(){\n        return(\n        <Dialog\n            icon=\"search-text\"\n            onClose={this.handleClose}\n            title=\"Model Administration\"\n            {...this.state}\n        >\n            <div className={Classes.DIALOG_BODY} style={{minHeight:\"200px\"}}>\n\n                <Tabs id={\"modeltabs\"}>\n                    <Tab id={\"newmodel\"} title={\"New Model\"} panel={<NewModel/>}/>\n                    <Tab id={\"existingmodels\"} title={\"Existing Models\"} panel={<ListModels/>}/>\n                </Tabs>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                    <Button onClick={this.handleClose}>Close</Button>\n\n                </div>\n            </div>\n        </Dialog>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        current_model: state.modelreducer.current_model\n    }\n}\n\nexport default connect(mapStateToProps, null, null, {forwardRef: true})(ModelDialog)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchNewTime} from \"../actions\";\nimport ModelDialog from \"./dialogs/ModelDialog\";\n\n\nclass Navbar extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.modalElement = React.createRef();\n\n    }\n\n    handle_models = () => this.modalElement.current.handleOpen();\n\n    render(){\n        return(\n            <nav className=\"bp3-navbar bp3-dark\">\n                <div style={{margin: \"0 auto\", width: \"600px\"}}>\n                    <div className=\"bp3-navbar-group bp3-align-left\">\n                        <div className=\"bp3-navbar-heading\">Domain Discovery - Seed Generation{/* - Current time: {this.props.currentTime}*/}</div>\n                    </div>\n                    <div className=\"bp3-navbar-group bp3-align-right\">\n                        <button className=\"bp3-button bp3-minimal bp3-icon-home\">Explorer</button>\n                        <button className=\"bp3-button bp3-minimal bp3-icon-cog\" onClick={this.handle_models}>Models\n                        </button>\n                        <ModelDialog ref={this.modalElement}/>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentTime: state.timereducer.currentTime\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateTime: () => dispatch(fetchNewTime())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React, {Component} from 'react';\nimport './App.css';\nimport Main from './views/Main'\nimport Navbar from './components/Navbar'\n\n\n//const nano = require('nano')('http://admin:password@localhost:5984');\n//nano.db.create('alice');\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Main/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import * as types from './types';\n\n\n// Initial (starting) state\nconst initialState = {\n    currentTime: new Date().toString()\n}\n\n// Our root reducer starts with the initial state\n// and must return a representation of the next state\nconst rootReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case types.FETCH_NEW_TIME:\n            return { ...state, currentTime: action.payload}\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer","import * as types from \"./types\";\n\nconst searchReducer = (state = [], action) => {\n    switch(action.type) {\n        case types.SEARCH_RESULTS:\n            return { ...state, websites: action.payload};\n        case types.SEARCH_FIRED:\n            return { ...state, running: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport default searchReducer","import * as types from \"./types\";\n\nconst modelReducer = (state = [], action) => {\n    switch(action.type) {\n        case types.NEW_MODEL:\n            return { ...state, name: action.payload};\n        case types.MODEL_LIST:\n            return { ...state, models: action.payload};\n        case types.ENABLE_MODEL:\n            return { ...state, current_model: action.payload};\n        case types.UPDATED_RELEVANCY:\n            return { ...state, updated_relevancy: action.payload};\n        case types.UPDATE_SEED_URLS:\n            return { ...state, seed_urls: action.payload};\n        case types.MODEL_STATS:\n            return { ...state, model_stats: action.payload};\n        case types.CRAWL_STARTED:\n            return { ...state, crawl: action.payload}\n        default:\n            return state;\n    }\n}\n\nexport default modelReducer","import {combineReducers} from 'redux';\nimport rootReducer from './test';\nimport searchReducer from \"./search\";\nimport modelReducer from \"./model\";\n\nexport default combineReducers({\n    timereducer: rootReducer,\n    searchreducer: searchReducer,\n    modelreducer: modelReducer\n});","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport thunk from 'redux-thunk';\nimport {fetchAllModels} from \"./actions\";\nimport reducers from './reducers';\n\n\nconst store = configureStore({});\nstore.dispatch(fetchAllModels());\n\nfunction configureStore(initialState) {\n    const enhancer = compose(applyMiddleware(thunk));\n    return createStore(reducers, initialState, enhancer);\n}\n\nrender((\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n), document.getElementById('root'));"],"sourceRoot":""}