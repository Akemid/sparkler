stages:
  - build
  - package

services:
  - docker:dind
  
  
build-java8:
  stage: build
  image: maven:3-jdk-8-alpine
  script: "mvn install -B && tar cvfz sparkler-jdk8.tgz ./build/"
  artifacts:
    paths:
    - ./sparkler-jdk8.tgz

build-java10:
  stage: build
  image: maven:3-jdk-11
  script: "apt update && apt install -y apt-transport-https && echo 'deb https://dl.bintray.com/sbt/debian /' | tee -a /etc/apt/sources.list.d/sbt.list && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 && apt update && apt install -y sbt && mvn install -B -P sbt -DskipTests && tar cvfz sparkler-jdk10.tgz ./build/"  
  artifacts:
    paths:
    - ./sparkler-jdk10.tgz



build-master:
  image: docker:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  stage: package
  dependencies:
    - build-java8
  script:
    - tar xvfz sparkler-jdk8.tgz
    - docker build --pull -t "$CI_REGISTRY_IMAGE" -f sparkler-deployment/docker/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build:
  image: docker:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  stage: package
  dependencies:
    - build-java8
  script:
    - tar xvfz sparkler-jdk8.tgz
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f sparkler-deployment/docker/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master



